
### set log levels ###
log4j.rootLogger = INFO ,D
log4j.logger.visitlog=INFO, VisitFile

PID=????
LOG_LEVEL_PATTERN=%5p
LOG_PATTERN=[%d{yyyy-MM-dd HH:mm:ss.SSS}] boot%X{context} - ${PID} ${LOG_LEVEL_PATTERN} [%t] --- %c{1}: %m%n


### 输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern =  ${LOG_PATTERN}

### 输出到日志文件 ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = /var/log/id-service-v2/id-service-v2
log4j.appender.D.Append = true
log4j.appender.D.DatePattern='.'yyyy-MM-dd
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = ${LOG_PATTERN}


#log4j.appender.VisitFile=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.VisitFile.encoding=UTF-8
#log4j.appender.VisitFile.File=/services/logs/id-service-v2/access.log
#log4j.appender.VisitFile.Append = true
#log4j.appender.VisitFile.DatePattern=yyyy-MM-dd HH
#log4j.appender.VisitFile.layout=org.apache.log4j.PatternLayout
#log4j.appender.VisitFile.layout.ConversionPattern=%m%n
